generator client {
  provider        = "prisma-client-js"
  previewFeatures = []
}

datasource db {
  provider = "sqlite"
  url      = "file:./main.db"
}

model Admin {
  id         String   @id @default(cuid())
  name       String
  email      String   @unique
  password   String
  is_active  Boolean  @default(true)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model User {
  id             String         @id @default(cuid())
  name           String
  email          String         @unique
  username       String         @unique
  provider_id    String         @unique
  avatar         String?
  is_active      Boolean        @default(true)
  is_banned      Boolean        @default(false)
  created_at     DateTime       @default(now())
  updated_at     DateTime       @updatedAt
  addresses      Address[]
  orders         Order[]
  cart_items     CartItem[]
  wishlist_items WishlistItem[]
}

model Address {
  id             String @id @default(cuid())
  recipient_name String
  house_number   String
  area           String
  city           String
  pincode        String
  state          String
  landmark       String
  phone_number   String
  user           User   @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id        String
}

model Category {
  id                    String               @id @default(cuid())
  name                  String
  created_at            DateTime             @default(now())
  updated_at            DateTime             @updatedAt
  product_category_tags ProductCategoryTag[]
}

model Attribute {
  id                      String                 @id @default(cuid())
  name                    String
  created_at              DateTime               @default(now())
  updated_at              DateTime               @updatedAt
  product_item_attributes ProductItemAttribute[]
}

model Tax {
  id               String         @id @default(cuid())
  name             String
  description      String
  created_at       DateTime       @default(now())
  updatedAt        DateTime       @updatedAt
  product_taxes    ProductTax[]
  order_item_taxes OrderItemTax[]
}

model Product {
  id            String               @id @default(cuid())
  name          String
  description   String
  cover_image   String
  is_published  Boolean              @default(false)
  created_at    DateTime             @default(now())
  updated_at    DateTime             @updatedAt
  category_tags ProductCategoryTag[]
  product_items ProductItem[]
  taxes         ProductTax[]
}

model ProductTax {
  id          String   @id @default(cuid())
  tax         Tax      @relation(fields: [tax_id], references: [id], onDelete: Cascade)
  tax_id      String
  product     Product  @relation(fields: [product_id], references: [id], onDelete: Cascade)
  product_id  String
  tax_percent Float
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
}

model ProductCategoryTag {
  id          String   @id @default(cuid())
  product     Product  @relation(fields: [product_id], references: [id], onDelete: Cascade)
  product_id  String
  category    Category @relation(fields: [category_id], references: [id], onDelete: Cascade)
  category_id String
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt

  @@unique([product_id, category_id])
}

model ProductItem {
  id                      String                 @id @default(cuid())
  product                 Product                @relation(fields: [product_id], references: [id], onDelete: Cascade)
  product_id              String
  product_image           String?
  price                   Float
  marked_price            Float
  currency                String                 @default("INR")
  in_stock                Boolean                @default(true)
  is_published            Boolean                @default(false)
  created_at              DateTime               @default(now())
  updated_at              DateTime               @updatedAt
  product_item_attributes ProductItemAttribute[]
  cart_items              CartItem[]
  wishlist_items          WishlistItem[]
  order_items             OrderItem[]
}

model ProductItemAttribute {
  id              String      @id @default(cuid())
  product_item    ProductItem @relation(fields: [product_item_id], references: [id], onDelete: Cascade)
  product_item_id String
  attribute       Attribute   @relation(fields: [attribute_id], references: [id], onDelete: Cascade)
  attribute_id    String
  attribute_value String
  created_at      DateTime    @default(now())
  updated_at      DateTime    @updatedAt
}

model CartItem {
  id              String      @id @default(cuid())
  product_item    ProductItem @relation(fields: [product_item_id], references: [id], onDelete: Cascade)
  product_item_id String
  user            User        @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id         String
  quantity        Int
  created_at      DateTime    @default(now())
  updated_at      DateTime    @updatedAt
}

model WishlistItem {
  id              String      @id @default(cuid())
  product_item    ProductItem @relation(fields: [product_item_id], references: [id], onDelete: Cascade)
  product_item_id String
  user            User        @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id         String
  created_at      DateTime    @default(now())
  updated_at      DateTime    @updatedAt
}

model Order {
  id                  String   @id @default(cuid())
  user                User     @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id             String
  razorpay_order_id   String
  razorpay_payment_id String?
  payment_method      String?
  payment_status      String   @default("initiated")
  delivery_charge     Float
  total_tax           Float
  total_amount        Float
  currency            String   @default("INR")
  status              String   @default("pending")
  created_at          DateTime @default(now())
  updated_at          DateTime @updatedAt
}

model OrderItem {
  id               String         @id @default(cuid())
  product_item     ProductItem?   @relation(fields: [product_item_id], references: [id], onDelete: SetNull)
  product_item_id  String?
  product_name     String
  quantity         Int
  price            Int
  currency         String         @default("INR")
  created_at       DateTime       @default(now())
  updated_at       DateTime       @updatedAt
  order_item_taxes OrderItemTax[]
}

model OrderItemTax {
  id            String    @id @default(cuid())
  tax           Tax       @relation(fields: [tax_id], references: [id], onDelete: Cascade)
  tax_id        String
  order_item    OrderItem @relation(fields: [order_item_id], references: [id], onDelete: Cascade)
  order_item_id String
  tax_percent   Float
  created_at    DateTime  @default(now())
  updated_at    DateTime  @updatedAt
}
